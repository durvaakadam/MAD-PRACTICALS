import 'package:flutter/material.dart';


void main() {
 runApp(MyApp());
}


class MyApp extends StatelessWidget {
 @override
 Widget build(BuildContext context) {
   return MaterialApp(
     theme: ThemeData(
       primarySwatch: Colors.blue,
     ),
     home: LoginForm(),
   );
 }
}


class LoginForm extends StatefulWidget {
 @override
 _LoginFormState createState() => _LoginFormState();
}


class _LoginFormState extends State<LoginForm> {
 final _formKey = GlobalKey<FormState>();
 TextEditingController emailController = TextEditingController();
 TextEditingController passwordController = TextEditingController();


 // Simulating stored user credentials for the purpose of this demo
 String? registeredEmail;
 String? registeredPassword;


 @override
 void dispose() {
   emailController.dispose();
   passwordController.dispose();
   super.dispose();
 }


 void checkLogin() {
   if (emailController.text == registeredEmail && passwordController.text == registeredPassword) {
     ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Login Successful')));
     Navigator.push(
       context,
       MaterialPageRoute(builder: (context) => ClinicalERPHomePage()),
     );
   } else {
     ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Invalid credentials')));
   }
 }


 @override
 Widget build(BuildContext context) {
   return Scaffold(
     appBar: AppBar(title: Text('Clinical ERP - Login')),
     body: Padding(
       padding: EdgeInsets.all(20),
       child: Form(
         key: _formKey,
         child: ListView(
           children: [
             TextFormField(
               controller: emailController,
               decoration: InputDecoration(
                 labelText: 'Email Address',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               keyboardType: TextInputType.emailAddress,
               validator: (value) {
                 if (value == null || value.isEmpty) {
                   return 'Please enter your email';
                 }
                 return null;
               },
             ),
             SizedBox(height: 16),
             TextFormField(
               controller: passwordController,
               decoration: InputDecoration(
                 labelText: 'Password',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               obscureText: true,
               validator: (value) {
                 if (value == null || value.isEmpty) {
                   return 'Please enter a password';
                 }
                 return null;
               },
             ),
             SizedBox(height: 24),
             ElevatedButton(
               onPressed: () {
                 if (_formKey.currentState?.validate() ?? false) {
                   checkLogin();
                 }
               },
               style: ElevatedButton.styleFrom(
                 padding: EdgeInsets.symmetric(vertical: 16, horizontal: 30),
                 backgroundColor: Colors.blueAccent, // Updated button style
                 shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(30)),
                 elevation: 5,
               ),
               child: Text('Login', style: TextStyle(fontSize: 18)),
             ),
             SizedBox(height: 16),
             TextButton(
               onPressed: () {
                 Navigator.push(
                   context,
                   MaterialPageRoute(builder: (context) => RegistrationForm(onRegister: (email, password) {
                     setState(() {
                       registeredEmail = email;
                       registeredPassword = password;
                     });
                   })),
                 );
               },
               child: Text("Don't have an account? Register here", style: TextStyle(color: Colors.blueAccent)),
             ),
           ],
         ),
       ),
     ),
   );
 }
}


class RegistrationForm extends StatefulWidget {
 final Function(String, String) onRegister;


 RegistrationForm({required this.onRegister});


 @override
 _RegistrationFormState createState() => _RegistrationFormState();
}


class _RegistrationFormState extends State<RegistrationForm> {
 final _formKey = GlobalKey<FormState>();
 TextEditingController fullNameController = TextEditingController();
 TextEditingController emailController = TextEditingController();
 TextEditingController passwordController = TextEditingController();
 TextEditingController confirmPasswordController = TextEditingController();


 @override
 void dispose() {
   fullNameController.dispose();
   emailController.dispose();
   passwordController.dispose();
   confirmPasswordController.dispose();
   super.dispose();
 }


 void registerUser() {
   if (_formKey.currentState?.validate() ?? false) {
     widget.onRegister(emailController.text, passwordController.text);
     ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text('Registration Successful')));
     Navigator.pop(context);
   }
 }


 @override
 Widget build(BuildContext context) {
   return Scaffold(
     appBar: AppBar(title: Text('Clinical ERP - Registration')),
     body: Padding(
       padding: EdgeInsets.all(20),
       child: Form(
         key: _formKey,
         child: ListView(
           children: [
             TextFormField(
               controller: fullNameController,
               decoration: InputDecoration(
                 labelText: 'Full Name',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               validator: (value) {
                 if (value == null || value.isEmpty) {
                   return 'Please enter your full name';
                 }
                 return null;
               },
             ),
             SizedBox(height: 16),
             TextFormField(
               controller: emailController,
               decoration: InputDecoration(
                 labelText: 'Email Address',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               keyboardType: TextInputType.emailAddress,
               validator: (value) {
                 if (value == null || value.isEmpty) {
                   return 'Please enter your email';
                 }
                 return null;
               },
             ),
             SizedBox(height: 16),
             TextFormField(
               controller: passwordController,
               decoration: InputDecoration(
                 labelText: 'Password',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               obscureText: true,
               validator: (value) {
                 if (value == null || value.isEmpty) {
                   return 'Please enter a password';
                 }
                 return null;
               },
             ),
             SizedBox(height: 16),
             TextFormField(
               controller: confirmPasswordController,
               decoration: InputDecoration(
                 labelText: 'Confirm Password',
                 labelStyle: TextStyle(color: Colors.blueAccent),
                 filled: true,
                 fillColor: Colors.grey[200],
                 border: OutlineInputBorder(borderRadius: BorderRadius.circular(10)),
               ),
               obscureText: true,
               validator: (value) {
                 if (value != passwordController.text) {
                   return 'Passwords do not match';
                 }
                 return null;
               },
             ),
             SizedBox(height: 24),
             ElevatedButton(
               onPressed: registerUser,
               style: ElevatedButton.styleFrom(
                 padding: EdgeInsets.symmetric(vertical: 16, horizontal: 30),
                 backgroundColor: Colors.blueAccent, // Updated button style
                 shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(30)),
                 elevation: 5,
               ),
               child: Text('Register', style: TextStyle(fontSize: 18)),
             ),
             SizedBox(height: 16),
             TextButton(
               onPressed: () {
                 Navigator.pop(context); // Go back to the login screen
               },
               child: Text("Already have an account? Login here", style: TextStyle(color: Colors.blueAccent)),
             ),
           ],
         ),
       ),
     ),
   );
 }
}


class ClinicalERPHomePage extends StatelessWidget {
 @override
 Widget build(BuildContext context) {
   return Scaffold(
     appBar: AppBar(title: Text('Clinical ERP - Home')),
     body: Center(
       child: Text(
         'Welcome to the Clinical ERP System',
         style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
       ),
     ),
   );
 }
}
